package com.lingshu.bsp.front.rpcapi.eth.contract;

import io.reactivex.Flowable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/hyperledger-web3j/web3j/tree/main/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.6.2.
 */
@SuppressWarnings("rawtypes")
public class DIDManagerEth extends Contract {
//    public static final String BINARY = "0x608060405234801561001057600080fd5b50610a72806100206000396000f30060806040526004361061006c5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663746182b7811461007157806375116b131461010a5780637c26192914610163578063d16662461461029a578063eac718c414610331575b600080fd5b34801561007d57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261010894369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375094975061038a9650505050505050565b005b34801561011657600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526101089436949293602493928401919081908401838280828437509497506104ad9650505050505050565b34801561016f57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526101bc94369492936024939284019190819084018382808284375094975061055a9650505050505050565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156101fd5781810151838201526020016101e5565b50505050905090810190601f16801561022a5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561025d578181015183820152602001610245565b50505050905090810190601f16801561028a5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156102a657600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261010894369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506107459650505050505050565b34801561033d57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526101089436949293602493928401919081908401838280828437509497506109449650505050505050565b806000836040518082805190602001908083835b602083106103bd5780518252601f19909201916020918201910161039e565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810190932084516103fe95919491909101925090506109ab565b506040805190810160405280600581526020017f66616c73650000000000000000000000000000000000000000000000000000008152506001836040518082805190602001908083835b602083106104675780518252601f199092019160209182019101610448565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810190932084516104a895919491909101925090506109ab565b505050565b6040805190810160405280600681526020017f6661696c656400000000000000000000000000000000000000000000000000008152506001826040518082805190602001908083835b602083106105155780518252601f1990920191602091820191016104f6565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101909320845161055695919491909101925090506109ab565b5050565b6060806000836040518082805190602001908083835b6020831061058f5780518252601f199092019160209182019101610570565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810184208751909460019450889350918291908401908083835b602083106105ef5780518252601f1990920191602091820191016105d0565b518151600019602094850361010090810a820192831692199390931691909117909252949092019687526040805197889003820188208954601f6002600183161590980290950116959095049283018290048202880182019052818752929594508693509184019050828280156106a75780601f1061067c576101008083540402835291602001916106a7565b820191906000526020600020905b81548152906001019060200180831161068a57829003601f168201915b5050845460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959750869450925084019050828280156107355780601f1061070a57610100808354040283529160200191610735565b820191906000526020600020905b81548152906001019060200180831161071857829003601f168201915b5050505050905091509150915091565b806000836040518082805190602001908083835b602083106107785780518252601f199092019160209182019101610759565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810190932084516107b995919491909101925090506109ab565b506040805190810160405280600581526020017f66616c73650000000000000000000000000000000000000000000000000000008152506001836040518082805190602001908083835b602083106108225780518252601f199092019160209182019101610803565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101909320845161086395919491909101925090506109ab565b50806040518082805190602001908083835b602083106108945780518252601f199092019160209182019101610875565b51815160209384036101000a6000190180199092169116179052604051919093018190038120875190955087945090928392508401908083835b602083106108ed5780518252601f1990920191602091820191016108ce565b5181516020939093036101000a60001901801990911692169190911790526040519201829003822093507fb75756e26c9e6e08fe58fcf426b72c888880b9c490107edb8ff2e726606c72f592506000919050a35050565b6040805190810160405280600481526020017f7472756500000000000000000000000000000000000000000000000000000000815250600182604051808280519060200190808383602083106105155780518252601f1990920191602091820191016104f6565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106109ec57805160ff1916838001178555610a19565b82800160010185558215610a19579182015b82811115610a195782518255916020019190600101906109fe565b50610a25929150610a29565b5090565b610a4391905b80821115610a255760008155600101610a2f565b905600a165627a7a7230582048be9ae0f69c3a5a9bb39d7ef45b9a45a519f6ef4e4412b9d251e231f5f6dcac0029";
    public static final String BINARY = "0x608060405234801561001057600080fd5b50610a96806100206000396000f30060806040526004361061006c5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663746182b7811461007157806375116b131461010a5780637c26192914610163578063d16662461461029a578063eac718c414610331575b600080fd5b34801561007d57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261010894369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375094975061038a9650505050505050565b005b34801561011657600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526101089436949293602493928401919081908401838280828437509497506104ad9650505050505050565b34801561016f57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526101bc94369492936024939284019190819084018382808284375094975061055a9650505050505050565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156101fd5781810151838201526020016101e5565b50505050905090810190601f16801561022a5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561025d578181015183820152602001610245565b50505050905090810190601f16801561028a5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156102a657600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261010894369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506107459650505050505050565b34801561033d57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526101089436949293602493928401919081908401838280828437509497506109689650505050505050565b806000836040518082805190602001908083835b602083106103bd5780518252601f19909201916020918201910161039e565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810190932084516103fe95919491909101925090506109cf565b506040805190810160405280600581526020017f66616c73650000000000000000000000000000000000000000000000000000008152506001836040518082805190602001908083835b602083106104675780518252601f199092019160209182019101610448565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810190932084516104a895919491909101925090506109cf565b505050565b6040805190810160405280600681526020017f6661696c656400000000000000000000000000000000000000000000000000008152506001826040518082805190602001908083835b602083106105155780518252601f1990920191602091820191016104f6565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101909320845161055695919491909101925090506109cf565b5050565b6060806000836040518082805190602001908083835b6020831061058f5780518252601f199092019160209182019101610570565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810184208751909460019450889350918291908401908083835b602083106105ef5780518252601f1990920191602091820191016105d0565b518151600019602094850361010090810a820192831692199390931691909117909252949092019687526040805197889003820188208954601f6002600183161590980290950116959095049283018290048202880182019052818752929594508693509184019050828280156106a75780601f1061067c576101008083540402835291602001916106a7565b820191906000526020600020905b81548152906001019060200180831161068a57829003601f168201915b5050845460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959750869450925084019050828280156107355780601f1061070a57610100808354040283529160200191610735565b820191906000526020600020905b81548152906001019060200180831161071857829003601f168201915b5050505050905091509150915091565b806000836040518082805190602001908083835b602083106107785780518252601f199092019160209182019101610759565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810190932084516107b995919491909101925090506109cf565b506040805190810160405280600581526020017f66616c73650000000000000000000000000000000000000000000000000000008152506001836040518082805190602001908083835b602083106108225780518252601f199092019160209182019101610803565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101909320845161086395919491909101925090506109cf565b507fb75756e26c9e6e08fe58fcf426b72c888880b9c490107edb8ff2e726606c72f58282604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156108c85781810151838201526020016108b0565b50505050905090810190601f1680156108f55780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610928578181015183820152602001610910565b50505050905090810190601f1680156109555780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15050565b6040805190810160405280600481526020017f7472756500000000000000000000000000000000000000000000000000000000815250600182604051808280519060200190808383602083106105155780518252601f1990920191602091820191016104f6565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a1057805160ff1916838001178555610a3d565b82800160010185558215610a3d579182015b82811115610a3d578251825591602001919060010190610a22565b50610a49929150610a4d565b5090565b610a6791905b80821115610a495760008155600101610a53565b905600a165627a7a723058209b449ea63d290a6017bc1e9a3903ead80cbdbcfd49bb22a48a960def366658580029";

    public static final String FUNC_CROSSCHAINTRY = "CrossChainTry";

    public static final String FUNC_CROSSCHAINCANCEL = "CrossChainCancel";

    public static final String FUNC_QUERY = "query";

    public static final String FUNC_CROSSCHAINSAVE = "CrossChainSave";

    public static final String FUNC_UPDATE_DID = "updateDID";

    public static final String FUNC_CROSSCHAINCONFIRM = "CrossChainConfirm";

    public static final Event TESTETH_EVENT = new Event("TestEth",
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>(false) {}, new TypeReference<Utf8String>(false) {}));
    ;

    @Deprecated
    protected DIDManagerEth(String contractAddress, Web3j web3j, Credentials credentials,
                            BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected DIDManagerEth(String contractAddress, Web3j web3j, Credentials credentials,
                            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected DIDManagerEth(String contractAddress, Web3j web3j,
                            TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected DIDManagerEth(String contractAddress, Web3j web3j,
                            TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> CrossChainTry(String key, String value) {
        final Function function = new Function(
                FUNC_CROSSCHAINTRY, 
                Arrays.<Type>asList(new Utf8String(key),
                new Utf8String(value)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> CrossChainCancel(String key) {
        final Function function = new Function(
                FUNC_CROSSCHAINCANCEL, 
                Arrays.<Type>asList(new Utf8String(key)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> query(String key) {
        final Function function = new Function(
                FUNC_QUERY, 
                Arrays.<Type>asList(new Utf8String(key)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> updateDID(String did, String newDidDocument) {
        final Function function = new Function(
                FUNC_UPDATE_DID,
                Arrays.<Type>asList(new Utf8String(did),
                        new Utf8String(newDidDocument)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static TestEthEventResponse getTestEthEventFromLog(Log log) {
        EventValuesWithLog eventValues = staticExtractEventParametersWithLog(TESTETH_EVENT, log);
        TestEthEventResponse typedResponse = new TestEthEventResponse();
        typedResponse.log = log;
        return typedResponse;
    }

    public Flowable<TestEthEventResponse> testEthEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getTestEthEventFromLog(log));
    }

    public Flowable<TestEthEventResponse> testEthEventFlowable(DefaultBlockParameter startBlock,
            DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(TESTETH_EVENT));
        return testEthEventFlowable(filter);
    }

    @Deprecated
    public static DIDManagerEth load(String contractAddress, Web3j web3j, Credentials credentials,
                                     BigInteger gasPrice, BigInteger gasLimit) {
        return new DIDManagerEth(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static DIDManagerEth load(String contractAddress, Web3j web3j,
                                     TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new DIDManagerEth(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static DIDManagerEth load(String contractAddress, Web3j web3j, Credentials credentials,
                                     ContractGasProvider contractGasProvider) {
        return new DIDManagerEth(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static DIDManagerEth load(String contractAddress, Web3j web3j,
                                     TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new DIDManagerEth(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<DIDManagerEth> deploy(Web3j web3j, Credentials credentials,
                                                   ContractGasProvider contractGasProvider) {
        return deployRemoteCall(DIDManagerEth.class, web3j, credentials, contractGasProvider, getDeploymentBinary(), "");
    }

    @Deprecated
    public static RemoteCall<DIDManagerEth> deploy(Web3j web3j, Credentials credentials,
                                                   BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(DIDManagerEth.class, web3j, credentials, gasPrice, gasLimit, getDeploymentBinary(), "");
    }

    public static RemoteCall<DIDManagerEth> deploy(Web3j web3j,
                                                   TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(DIDManagerEth.class, web3j, transactionManager, contractGasProvider, getDeploymentBinary(), "");
    }

    @Deprecated
    public static RemoteCall<DIDManagerEth> deploy(Web3j web3j,
                                                   TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(DIDManagerEth.class, web3j, transactionManager, gasPrice, gasLimit, getDeploymentBinary(), "");
    }

    private static String getDeploymentBinary() {
        return BINARY;
    }

    public static class TestEthEventResponse extends BaseEventResponse {
        public byte[] key;

        public byte[] value;
    }
}
